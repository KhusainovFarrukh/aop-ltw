plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'kh.farrukh'
version = '0.0.1-SNAPSHOT'

java {

}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'org.postgresql:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //Jakarta validations
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //Mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    //API docs
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    
    //Spring Instrument
    implementation 'org.springframework:spring-instrument'

}

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    doFirst {
        def aspectjWeaverJar = configurations.runtimeClasspath.find { it.name.contains("aspectjweaver") }
        def springInstrumentJar = configurations.runtimeClasspath.find { it.name.contains("spring-instrument") }

        if (aspectjWeaverJar && springInstrumentJar) {
            jvmArgs = [
                    "-javaagent:${aspectjWeaverJar.absolutePath}",
                    "-javaagent:${springInstrumentJar.absolutePath}"
            ]
        } else {
            throw new GradleException("AspectJ weaver or Spring instrument jar not found in runtime classpath")
        }
    }
}
